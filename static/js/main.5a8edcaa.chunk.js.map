{"version":3,"sources":["api.js","components/EnhancedTableHead.js","components/GamesTable.js","components/LineGraph.js","components/BasicDatePicker.js","App.js","serviceWorker.js","index.js"],"names":["api","games","url","getAll","axios","get","rows","id","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","_this","props","onRequestSort","_this2","this","_this$props","order","orderBy","react_default","a","createElement","TableHead_default","TableRow_default","map","row","TableCell_default","key","align","padding","sortDirection","Tooltip_default","title","placement","enterDelay","TableSortLabel_default","active","direction","onClick","React","Component","desc","b","GamesTable","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleRequestSort","state","setState","handleSelectAllClick","target","checked","selected","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","page","handleChangeRowsPerPage","rowsPerPage","value","isSelected","data","classes","_this$state","console","log","emptyRows","Math","min","Paper_default","className","root","tableWrapper","Table_default","table","aria-labelledby","EnhancedTableHead_EnhancedTableHead","numSelected","onSelectAllClick","rowCount","TableBody_default","array","cmp","stabilizedThis","el","index","sort","stableSort","getSorting","hover","tabIndex","component","scope","game","timestamp","revenue","impressions","eCPM","style","height","colSpan","TablePagination_default","rowsPerPageOptions","count","backIconButtonProps","aria-label","nextIconButtonProps","onChangePage","onChangeRowsPerPage","withStyles","theme","width","marginTop","spacing","unit","minWidth","overflowX","LineGraph","es6","dataKey","type","stroke","useStyles","makeStyles","button","marginLeft","rangeContainer","display","date","paddingTop","paddingBottom","paddingLeft","paddingRight","BasicDatePicker","filterDate","onClickClear","_useState","useState","_useState2","slicedToArray","selectedRange","handleDateChange","handleSelect","range","getFormattedDate","moment","format","Fragment","lib","calendars","onInit","onChange","maxDate","linkedCalendars","index_es","startDate","endDate","variant","grid","gridItem","graph","errorCard","errorContent","alignSelf","App","updateGames","cached","useRef","useEffect","asyncToGenerator","regenerator_default","mark","_callee","gamesData","modifiedData","wrap","_context","prev","next","fetchData","sent","calculate","current","stop","objectSpread","_fetchData","apply","arguments","_callee2","response","_context2","status","abrupt","t0","container","item","xs","components_BasicDatePicker","Date","filteredGames","filter","components_GamesTable","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5a8edcaa.chunk.js","sourcesContent":["import axios from \"axios\";\n\nexport default {\n  games(url) {\n    return {\n      getAll: () => axios.get(url)\n    };\n  }\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst rows = [\n  {\n    id: \"game\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Game\"\n  },\n  {\n    id: \"timestamp\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Timestamp\"\n  },\n  { id: \"revenue\", numeric: true, disablePadding: false, label: \"Revenue\" },\n  {\n    id: \"impressions\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Impressions\"\n  },\n  { id: \"eCPM\", numeric: true, disablePadding: false, label: \"eCPM\" }\n];\n\nexport default class EnhancedTableHead extends React.Component {\n  createSortHandler = property => event => {\n    this.props.onRequestSort(event, property);\n  };\n\n  render() {\n    const { order, orderBy } = this.props;\n\n    return (\n      <TableHead>\n        <TableRow>\n          {rows.map(\n            row => (\n              <TableCell\n                key={row.id}\n                align={row.numeric ? \"right\" : \"left\"}\n                padding={row.disablePadding ? \"none\" : \"default\"}\n                sortDirection={orderBy === row.id ? order : false}\n              >\n                <Tooltip\n                  title=\"Sort\"\n                  placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\n                  enterDelay={300}\n                >\n                  <TableSortLabel\n                    active={orderBy === row.id}\n                    direction={order}\n                    onClick={this.createSortHandler(row.id)}\n                  >\n                    {row.label}\n                  </TableSortLabel>\n                </Tooltip>\n              </TableCell>\n            ),\n            this\n          )}\n        </TableRow>\n      </TableHead>\n    );\n  }\n}\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport EnhancedTableHead from \"./EnhancedTableHead\";\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => desc(a, b, orderBy)\n    : (a, b) => -desc(a, b, orderBy);\n}\n\nconst styles = theme => ({\n  root: {\n    width: \"100%\",\n    marginTop: theme.spacing.unit * 3\n  },\n  table: {\n    minWidth: 1020\n  },\n  tableWrapper: {\n    overflowX: \"auto\"\n  }\n});\n\nclass GamesTable extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      order: \"asc\",\n      orderBy: \"calories\",\n      selected: [],\n      data: props.games,\n      page: 0,\n      rowsPerPage: 5\n    };\n  }\n\n  handleRequestSort = (event, property) => {\n    const orderBy = property;\n    let order = \"desc\";\n\n    if (this.state.orderBy === property && this.state.order === \"desc\") {\n      order = \"asc\";\n    }\n\n    this.setState({ order, orderBy });\n  };\n\n  handleSelectAllClick = event => {\n    if (event.target.checked) {\n      this.setState(state => ({ selected: this.props.games.map(n => n.id) }));\n      return;\n    }\n    this.setState({ selected: [] });\n  };\n\n  handleClick = (event, id) => {\n    const { selected } = this.state;\n    const selectedIndex = selected.indexOf(id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    this.setState({ selected: newSelected });\n  };\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ rowsPerPage: event.target.value });\n  };\n\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\n\n  render() {\n    const { classes, games } = this.props;\n    const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n    console.log(data);\n    const emptyRows =\n      rowsPerPage - Math.min(rowsPerPage, games.length - page * rowsPerPage);\n\n    return (\n      <Paper className={classes.root}>\n        <div className={classes.tableWrapper}>\n          <Table className={classes.table} aria-labelledby=\"tableTitle\">\n            <EnhancedTableHead\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={this.handleSelectAllClick}\n              onRequestSort={this.handleRequestSort}\n              rowCount={games.length}\n            />\n            <TableBody>\n              {stableSort(games, getSorting(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map(n => {\n                  return (\n                    <TableRow\n                      hover\n                      onClick={event => this.handleClick(event, n.id)}\n                      tabIndex={-1}\n                      key={n.id}\n                    >\n                      <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {n.game}\n                      </TableCell>\n                      <TableCell align=\"right\">{n.timestamp}</TableCell>\n                      <TableCell align=\"right\">{n.revenue}</TableCell>\n                      <TableCell align=\"right\">{n.impressions}</TableCell>\n                      <TableCell align=\"right\">{n.eCPM}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 49 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <TablePagination\n          rowsPerPageOptions={[5, 10]}\n          component=\"div\"\n          count={games.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            \"aria-label\": \"Previous Page\"\n          }}\n          nextIconButtonProps={{\n            \"aria-label\": \"Next Page\"\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n      </Paper>\n    );\n  }\n}\n\nGamesTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(GamesTable);\n","import React from \"react\";\nimport { LineChart, Line, XAxis, YAxis } from \"recharts\";\n\nexport default function LineGraph(props) {\n  const { data } = props;\n  return (\n    <LineChart width={500} height={300} data={data}>\n      <XAxis dataKey=\"timestamp\" />\n      <YAxis dataKey=\"eCPM\" />\n      <Line type=\"monotone\" dataKey=\"eCPM\" stroke=\"#8884d8\" />\n    </LineChart>\n  );\n}\n","import React, { useState } from \"react\";\nimport { DateRange } from \"react-date-range\";\nimport moment from \"moment\";\nimport { Typography, Button, Paper, Container } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 32\n  },\n  button: {\n    marginTop: 16,\n    marginLeft: 26\n  },\n  rangeContainer: {\n    display: \"flex\"\n  },\n  date: {\n    paddingTop: 8,\n    paddingBottom: 8,\n    paddingLeft: 8,\n    paddingRight: 8,\n    marginLeft: 16\n  }\n});\n\nfunction BasicDatePicker(props) {\n  const classes = useStyles();\n  const { filterDate, onClickClear } = props;\n  const [selectedRange, handleDateChange] = useState({});\n\n  function handleSelect(range) {\n    handleDateChange(range);\n  }\n\n  function onClickGo() {\n    filterDate({\n      startDate: getFormattedDate(selectedRange.startDate),\n      endDate: getFormattedDate(selectedRange.endDate)\n    });\n  }\n\n  const getFormattedDate = date => moment(date).format(\"YYYY-MM-DD\");\n\n  return (\n    <React.Fragment>\n      <DateRange\n        format=\"YYY/MM/DD\"\n        calendars={1}\n        onInit={handleSelect}\n        onChange={handleSelect}\n        maxDate={moment()}\n        linkedCalendars={true}\n      />\n\n      <div className={classes.rangeContainer}>\n        <Paper className={classes.date}>\n          {getFormattedDate(selectedRange.startDate)}\n        </Paper>\n        <Paper className={classes.date}>\n          {moment(selectedRange.endDate).format(\"YYYY-MM-DD\")}\n        </Paper>\n      </div>\n\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={onClickGo}\n        >\n          Search\n        </Button>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          onClick={onClickClear}\n        >\n          Clear\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default BasicDatePicker;\n","import React, { useEffect, useState, useRef } from \"react\";\nimport api from \"./api\";\nimport GamesTable from \"./components/GamesTable\";\nimport LineGraph from \"./components/LineGraph\";\nimport BasicDatePicker from \"./components/BasicDatePicker\";\nimport { Grid, Card, Typography } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/styles\";\n\nconst useStyles = makeStyles({\n  root: {\n    padding: 24\n  },\n  grid: {},\n  gridItem: {\n    padding: 8\n  },\n  graph: {\n    padding: 24\n  },\n  errorCard: {\n    display: \"flex\"\n  },\n  errorContent: {\n    alignSelf: \"center\",\n    padding: 24\n  }\n});\n\nfunction App() {\n  const classes = useStyles();\n  const [games, updateGames] = useState([]);\n  const cached = useRef(null);\n\n  useEffect(() => {\n    (async function() {\n      const gamesData = await fetchData();\n      const modifiedData = calculate(gamesData);\n      updateGames(modifiedData);\n      cached.current = modifiedData;\n    })();\n\n    // Update the document title using the browser API\n  }, []);\n\n  const calculate = games =>\n    games.map((row, index) => {\n      return {\n        id: index + 1,\n        eCPM: (row.revenue / row.impressions) * 1000,\n        ...row\n      };\n    });\n\n  function filterDate(selectedRange) {\n    const startDate = new Date(selectedRange.startDate);\n    const endDate = new Date(selectedRange.endDate);\n    console.log(startDate, endDate);\n\n    const filteredGames = cached.current.filter(function(game) {\n      const date = new Date(game.timestamp);\n      return date >= startDate && date <= endDate;\n    });\n    console.log(filteredGames);\n    updateGames(filteredGames);\n  }\n\n  async function fetchData() {\n    try {\n      const response = await api\n        .games(\"https://www.mocky.io/v2/5cd04a20320000442200fc10\")\n        .getAll();\n      if (response.status === 200) {\n        return response.data;\n      } else {\n        console.log(response);\n      }\n    } catch (error) {\n      console.log(error);\n      return [];\n    }\n  }\n\n  function onClickClearFilter() {\n    updateGames(cached.current);\n  }\n\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={24} className={classes.grid}>\n        <Grid item xs className={classes.gridItem}>\n          <BasicDatePicker\n            filterDate={filterDate}\n            onClickClear={onClickClearFilter}\n          />\n        </Grid>\n        {games.length !== 0 ? (\n          <React.Fragment>\n            <Grid className={classes.graph} item xs>\n              <LineGraph data={games} />\n            </Grid>\n            <Grid item xs>\n              <GamesTable games={games} />\n            </Grid>\n          </React.Fragment>\n        ) : (\n          error()\n        )}\n      </Grid>\n    </div>\n  );\n\n  function error() {\n    return (\n      <Card className={classes.errorCard}>\n        <div className={classes.errorContent}>\n          <Typography variant=\"h6\">\n            No data present in the given range.\n          </Typography>\n          <Typography variant=\"h6\">Try with a different range.</Typography>\n        </div>\n      </Card>\n    );\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}